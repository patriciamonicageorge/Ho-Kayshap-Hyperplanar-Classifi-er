%PATRICIA MONICA GEORGE
%PATTERN RECOGNITION

%HYPERPLANE W12
R=0.1;
for k=1:5000
    OUTPUT1(:,k)=[1;a(k);b(k);c(k);d(k)];
end
for k=5001:10000
    OUTPUT1(:,k)=-1*[1;a(k);b(k);c(k);d(k)];
end

BIAS1=ones(10000,1);
WEIGHT1=ones(5,1);
OUTPUT_WEIGHT1=OUTPUT1'*WEIGHT1;

i=1;
K1=1;
while (K1==1)
OUTPUT_WEIGHT1=OUTPUT1'*WEIGHT1(:,i);
ERROR1(:,i)=OUTPUT_WEIGHT1(:,1)-BIAS1(:,i);
BIAS1(:,i+1)=BIAS1(:,i)+R*(ERROR1(:,i)+abs(ERROR1(:,i)));
WEIGHT1(:,i+1)=inv(OUTPUT1*OUTPUT1')*OUTPUT1*BIAS1(:,i+1);
i=i+1;

for j=1:10000
    if (BIAS1(j,i)==BIAS1(j,i-1))
        J1(j)=0;
    else
        J1(j)=1;
    end
end
if(sum(J1)==0)
    K1=0;
else
    K1=1;
end
end
w1=i-1;
%HYPERPLANE W23
R=0.1;
for k=1:5000
    OUTPUT2(:,k)=[1;a(k+5000);b(k+5000);c(k+5000);d(k+5000)];
end
for k=5001:10000
    OUTPUT2(:,k)=-1*[1;a(k+5000);b(k+5000);c(k+5000);d(k+5000)];
end

BIAS2=ones(10000,1);
WEIGHT2=ones(5,1);
OUTPUT_WEIGHT2=OUTPUT2'*WEIGHT2;

i=1;
K2=1;
while (K2==1)
OUTPUT_WEIGHT2=OUTPUT2'*WEIGHT2(:,i);
E2(:,i)=OUTPUT_WEIGHT2(:,1)-BIAS2(:,i);
BIAS2(:,i+1)=BIAS2(:,i)+R*(E2(:,i)+abs(E2(:,i)));
WEIGHT2(:,i+1)=inv(OUTPUT2*OUTPUT2')*OUTPUT2*BIAS2(:,i+1);
i=i+1;

for j=1:10000
    if (BIAS2(j,i)==BIAS2(j,i-1))
        J2(j)=0;
    else
        J2(j)=1;
    end
end
if(sum(J2)==0)
    K2=0;
else
    K2=1;
end
end
w2=i-1;
%HYPERPLANE W31
R=0.1;
for k=1:5000
    OUTPUT3(:,k)=[1;a(k+10000);b(k+10000);c(k+10000);d(k+10000)];
end
for k=5001:10000
    OUTPUT3(:,k)=-1*[1;a(k-5000);b(k-5000);c(k+5000);d(k-5000)];
end

BIAS3=ones(10000,1);
WEIGHT3=ones(5,1);
OUTPUT_WEIGHT3=OUTPUT3'*WEIGHT3;

i=1;
K3=1;
while (K3==1)
OUTPUT_WEIGHT3=OUTPUT3'*WEIGHT3(:,i);
ERROR3(:,i)=OUTPUT_WEIGHT3(:,1)-BIAS3(:,i);
BIAS3(:,i+1)=BIAS3(:,i)+R*(ERROR3(:,i)+abs(ERROR3(:,i)));
WEIGHT3(:,i+1)=inv(OUTPUT3*OUTPUT3')*OUTPUT3*BIAS3(:,i+1);
i=i+1;

for j=1:10000
    if (BIAS3(j,i)==BIAS3(j,i-1))
        J3(j)=0;
    else
        J3(j)=1;
    end
end
if(sum(J3)==0)
    K3=0;
else
    K3=1;
end
end
w3=i-1;
for i=1:15000
 %FEATURE VECTORS OF TRAINING DATA
FEATURE_VECTOR=[1;t1(i);t2(i);t3(i);t4(i)];
    
%DISCRIMINANT FUNCTION FOR EACH CLASS
DISCRIMINANT_FUNCTION_X=WEIGHT1(:,w1)'*FEATURE_VECTOR;
DISCRIMINANT_FUNCTION_Y=WEIGHT2(:,w2)'*FEATURE_VECTOR;
DISCRIMINANT_FUNCTION_Z=WEIGHT3(:,w3)'*FEATURE_VECTOR;

%CLASSIFIER DECISION BASED ON THE DISCRIMINANT FUNCTION
    if((DISCRIMINANT_FUNCTION_X>DISCRIMINANT_FUNCTION_Y)&&(DISCRIMINANT_FUNCTION_X>DISCRIMINANT_FUNCTION_Z))
            CLASS(i)=1;
    end
    if((DISCRIMINANT_FUNCTION_Y>DISCRIMINANT_FUNCTION_X)&&(DISCRIMINANT_FUNCTION_Y>DISCRIMINANT_FUNCTION_Z))
            CLASS(i)=2;
    end
    if((DISCRIMINANT_FUNCTION_Z>DISCRIMINANT_FUNCTION_X)&&(DISCRIMINANT_FUNCTION_Z>DISCRIMINANT_FUNCTION_Y))
            CLASS(i)=3;
    end
    
    
end
%PROBABILITY OF ERROR
R11=0;R22=0;R33=0;
W12=0;W21=0;W31=0;W13=0;W23=0;W32=0;
for i=1:5000
    if(CLASS(i)==1)
        R11=R11+1;
    else if(CLASS(i)==2)
        W12=W12+1;
        else if(CLASS(i)==3)
               W13=W13+1; 
            end
        end
    end
end
for i=5001:10000
   if(CLASS(i)==1)
        W21=W21+1;
    else if(CLASS(i)==2)
        R22=R22+1;
        else if(CLASS(i)==3)
               W23=W23+1; 
            end
        end
    end
end
for i=10001:15000
   if(CLASS(i)==1)
        W31=W31+1;
    else if(CLASS(i)==2)
        W32=W32+1;
        else if(CLASS(i)==3)
               R33=R33+1; 
            end
        end
    end
end

%CREATE AN ASCII TEXT FILE AND PRINT THE CLASSIFIER DECISION 
fileID = fopen('pgeorge-classified-q2pt2.txt','w');
fprintf(fileID,'%d \r\n',CLASS');
fclose(fileID);
%type pgeorge-classified-q1pt1.txt;

RIGHT=R11+R22+R33;
WRONG=W12+W21+W13+W31+W23+W32;
PROBABILITY_OF_ERROR=WRONG/15000

%CONFUSION MATRIX
CONFUSION_MATRIX=[R11 W12 W13;W21 R22 W23; W31 W32 R33]
